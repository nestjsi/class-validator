"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("class-validator");exports.FixedLength=function FixedLength(a,e){return t.ValidateBy({constraints:[a],name:"FixedLength",validator:{defaultMessage:t.buildMessage(t=>t+"$property must be equal to $constraint1 characters",e),validate:(a,e)=>{const n=String(a).trim();return!(!t.minLength(n,e.constraints[0])||!t.maxLength(n,e.constraints[0]))}}},e)},exports.IS_POSITIVE_INT="isPositiveInt",exports.IS_STRING_DATE_PATTERN="^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",exports.IS_STRING_TIME_OF_DAY="(?:[01]d|2[0123]):(?:[012345]d)",exports.InRange=function InRange(a,e,n,s){return t.ValidateBy({constraints:[a,e,n],name:"InRange",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2 and have $constraint3 max decimal places.",s),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1})&&(!!t.min(a,e.constraints[0])&&(!!t.max(a,e.constraints[1])&&!!t.isNumber(a,{maxDecimalPlaces:e.constraints[2]})))}},s)},exports.IsDiscount=function IsDiscount(a){return t.ValidateBy({constraints:[.01,99.99],name:"IsDiscount",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2 and have two max decimal places.",a),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1,maxDecimalPlaces:2})&&(!!t.min(a,e.constraints[0])&&!!t.max(a,e.constraints[1]))}},a)},exports.IsEmailTidy=function IsEmailTidy(a,e){return t.ValidateBy({constraints:[],name:"IsEmailTidy",validator:{defaultMessage:t.buildMessage(t=>t+"$property must be an email",e),validate:a=>t.isEmail(a,{allow_ip_domain:!1,allow_utf8_local_part:!1,domain_specific_validation:!0,ignore_max_length:!1})}},e)},exports.IsHTMLFree=function IsHTMLFree(a){return t.ValidateBy({constraints:[],name:"IsHTMLFree",validator:{defaultMessage:t.buildMessage(t=>t+"$property must be a string without HTML tags",a),validate:a=>!!t.isString(a)&&/(<([^>]+)>)/g.test(a)}},a)},exports.IsNotBlankString=function IsNotBlankString(a){return function IsNotBlankStringDecorator(e,n){t.registerDecorator({async:!1,constraints:[],name:"IsNotBlankString",options:a,propertyName:n,target:e.constructor,validator:{defaultMessage:t=>`[${t.property}] should not be a blank string`,validate:a=>t.isString(a)&&t.isNotEmpty(a.trim())}})}},exports.IsNotEmptyString=function IsNotEmptyString(a){return function IsNotEmptyStringDecorator(e,n){t.registerDecorator({async:!1,constraints:[],name:"IsNotEmptyString",options:a,propertyName:n,target:e.constructor,validator:{defaultMessage:t=>`[${t.property}] should not be an empty string`,validate:a=>t.isString(a)&&t.isNotEmpty(a)}})}},exports.IsNotNull=function IsNotNull(a){return function IsNotNullDecorator(e,n){t.registerDecorator({async:!1,constraints:[],name:"IsNotNull",options:a,propertyName:n,target:e.constructor,validator:{defaultMessage:t=>`[${t.property}] should not be null`,validate:a=>t.isString(a)&&t.isNotEmpty(a)}})}},exports.IsPositiveInt=function IsPositiveInt(a){return t.ValidateBy({name:"isPositiveInt",validator:{validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1})&&(!!t.min(a,1)&&!!t.isInt(a)),defaultMessage:t.buildMessage(t=>t+"$property must be a positive integer",a)}},a)},exports.IsPrice=function IsPrice(a){return t.ValidateBy({constraints:[.01,70368744177663.99],name:"IsPrice",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2 and have two max decimal places.",a),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1,maxDecimalPlaces:2})&&(!!t.min(a,e.constraints[0])&&!!t.max(a,e.constraints[1]))}},a)},exports.IsSingleLine=function IsSingleLine(a){return function ClassValidatorCustomIsSingleLine(e,n){t.registerDecorator({constraints:[],name:"IsSingleLine",options:{message:"The text should be a single line",...a},propertyName:n,target:e.constructor,validator:{validate:t=>"string"==typeof t&&/\r?\n|\r/g.test(t)}})}},exports.IsStringDate=function IsStringDate(a){return function ClassValidatorCustomIsStringDate(e,n){t.registerDecorator({constraints:[],name:"IsStringDate",options:{message:"Date should be in [YYYY-MM-DD] format",...a},propertyName:n,target:e.constructor,validator:{validate:t=>"string"==typeof t&&/^\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])$/i.test(t)}})}},exports.IsUUID4=function IsUUID4(a){return t.ValidateBy({constraints:[],name:"IsUUID4",validator:{defaultMessage:t.buildMessage(t=>t+"$property must be an UUID",a),validate:a=>t.isUUID(a,4)}},a)},exports.MAX_SAFE_FLOAT=562949953421311,exports.MinMax=function MinMax(a,e,n){return t.ValidateBy({constraints:[a,e],name:"MinMax",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2.",n),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1})&&(!!t.min(a,e.constraints[0])&&!!t.max(a,e.constraints[1]))}},n)},exports.MinMaxInt=function MinMaxInt(a,e,n){return t.ValidateBy({constraints:[a,e],name:"MinMaxInt",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be an integer, not be less than $constraint1, not be greater than $constraint2.",n),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1})&&(!!t.min(a,e.constraints[0])&&(!!t.max(a,e.constraints[1])&&!!t.isInt(a)))}},n)},exports.MinMaxLength=function MinMaxLength(a,e,n){return t.ValidateBy({constraints:[a,e],name:"MinMaxLength",validator:{defaultMessage:t.buildMessage(t=>t+"$property must be longer than $constraint1 characters or equal to $constraint2 characters",n),validate:(a,e)=>!!t.minLength(a,e.constraints[0])&&!!t.maxLength(a,e.constraints[1])}},n)},exports.MinMaxPct=function MinMaxPct(a,e,n){return t.ValidateBy({constraints:[a,e],name:"MinMaxPct",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2 and have two max decimal places.",n),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1,maxDecimalPlaces:2})&&(!!t.min(a,e.constraints[0])&&!!t.max(a,e.constraints[1]))}},n)},exports.Money=function Money(a=562949953421311,e=.01,n){return t.ValidateBy({constraints:[e,a],name:"Money",validator:{defaultMessage:t.buildMessage(t=>t+"'$property' must be a number, not be less than $constraint1, not be greater than $constraint2 and have two max decimal places.",n),validate:(a,e)=>!!t.isNumber(a,{allowInfinity:!1,allowNaN:!1,maxDecimalPlaces:2})&&(!!t.min(a,e.constraints[0])&&!!t.max(a,e.constraints[1]))}},n)};
//# sourceMappingURL=index.js.map
